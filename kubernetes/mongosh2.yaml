kind: ServiceAccount
apiVersion: v1
metadata:
  name: mongosh2
  namespace: dojot
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: mongosh2-role
  namespace: dojot
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: mongosh2-role-binding
  namespace: dojot
subjects:
- kind: ServiceAccount
  name: mongosh2
  namespace: dojot
roleRef:
  kind: Role
  name: mongosh2-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: Service
metadata:
  name: mongosh2
  labels:
    app: mongosh2
  namespace: dojot
spec:
  clusterIP: None
  ports:
  - port: 27018
    targetPort: 27018
    name: mongosh2
  selector:
    app: mongosh2
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongosh2
  namespace: dojot
spec:
  selector:
    matchLabels:
      app: mongosh2
  serviceName: "mongosh2"
  replicas: 3
  template:
    metadata:
      labels:
        app: mongosh2
    spec:
      terminationGracePeriodSeconds: 15
      containers:
      - name: mongosh2
        image: mongo:4.0.0
        command:
        - mongod
        - "--replSet"
        - rs2
        - "--bind_ip"
        - 0.0.0.0
        - "--shardsvr"
        - "--smallfiles"
        - "--noprealloc"
        ports:
        - containerPort: 27018
          name: mongosh2
        # volumeMounts:
        #   - name: mongo-volume
        #     mountPath: /data/db
      - name: mongo-sidecar
        image: cvallance/mongo-k8s-sidecar
        env:
        - name: MONGO_SIDECAR_POD_LABELS
          value: "app=mongosh2"
        - name: KUBE_NAMESPACE
          value: dojot
        - name: MONGO_PORT
          value: '27018'
      serviceAccountName: mongosh2
  # volumeClaimTemplates:
  # - metadata:
  #     name: mongo-volume
  #   spec:
  #     accessModes: [ "ReadWriteOnce" ]
  #     storageClassName: dojot
  #     resources:
  #       requests:
  #         storage: 1Gi
